name: BackendCI
on:
  push:
    paths:
      - "app/**/*"
jobs:
  run:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2

      - uses: actions/setup-python@v2
        with:
          python-version: '3.10'

      - name: Install requirements
        run: pip install -r './app/requirements.txt'

      - name: Test
        run: python -m unittest

      - name: Lint
        run: pylint-fail-under --rcfile .pylintrc --fail_under 9.75 $(git ls-files '*.py')

      - name: AWS Auth
        if: github.ref == 'refs/heads/master' || startsWith(github.ref, 'refs/heads/deploy-api')
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: 'ap-southeast-2'

      - name: ECR Auth
        if: github.ref == 'refs/heads/master' || startsWith(github.ref, 'refs/heads/deploy-api')
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1

      - name: Build and Push image
        if: github.ref == 'refs/heads/master' || startsWith(github.ref, 'refs/heads/deploy-api')
        env:
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          ECR_REPOSITORY: ${{ secrets.API_ECR_REPOSITORY }}
        working-directory: app
        run: |
          docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:latest . --build-arg GIT_HASH_VERSION=${{ github.sha }}
          docker push $ECR_REGISTRY/$ECR_REPOSITORY:latest

      - name: Redeploy API Service
        if: github.ref == 'refs/heads/master' || startsWith(github.ref, 'refs/heads/deploy-api')
        run: aws ecs update-service --cluster ${{ secrets.API_ECS_CLUSTER_ARN }} --service ${{ secrets.API_ECS_SERVICE_NAME }} --force-new-deployment

      - name: Wait for deployment
        if: github.ref == 'refs/heads/master' || startsWith(github.ref, 'refs/heads/deploy-api')
        run: aws ecs wait services-stable --cluster ${{ secrets.API_ECS_CLUSTER_ARN }} --service ${{ secrets.API_ECS_SERVICE_NAME }}

      - name: Verify deployment version
        if: github.ref == 'refs/heads/master' || startsWith(github.ref, 'refs/heads/deploy-api')
        run: bash ./verify-api-deploy.sh
